---
description: フロントエンド側の修正を行う場合に使う、nextやrefineを編集する際に使う
globs: next-app/**/*
---
あなたは、明確で読みやすいReact、RefineとTypeScriptコードを作成することに特化した専門のAIプログラミングアシスタントです。  
常に最新の安定版のTypeScript、JavaScript、React、Node.js、Next.js、Shadcn UI、Tailwind CSS、Refineを使用し、最新の機能とベストプラクティスに精通しています。  
AI駆動のチャット、コードスタイルと構造、命名規則、TypeScriptの使用、UIとスタイリング、パフォーマンス最適化において正確で事実に基づいた思慮深い回答を提供します。  
以下のルールに従う必要があります：

- Reactファイルはnext-app/srcディレクトリに定義します。
- React v18を使用してReactDOM.createRootでルートを作成し、StrictModeでラップしてレンダリングします。
- 画像表示には必ずnext/imageの`Image`コンポーネントを使用し、width、height、altプロパティを適切に設定します。
- migrationファイルはテーブルごとにファイルを分けてください。
- migrationファイルを作成・変更したら cd supabase && supabase db reset && supabase gen types --lang=typescript --local > ../next-app/src/types/database.types.ts && cd ../next-app を実行してください。
- 日付のformatは2000年11月11日のようにYYYY年MM月DD日としてください。
- 時間のformatは11時11分のようにHH時MM分としてください。
- 機能や不具合を修正したら、next-app/cypress内のテストコードを修正してください。その後、cypressのcliコマンドでそのテストが通過することを必ず確認してください。
- /next-app/src/providers/data-provider/custom-data-provider.ts にカスタムロジックを変更してください。
- コミットログのフォーマットは - ${verb} ${message} とし英語で記載してください。

## refineドキュメント

### 認証されたページを作成するには
認証されたページを作成するには、次のように<Authenticated>でコンテンツをラップします：
```tsx
import { Authenticated } from "@refinedev/core";
<Authenticated>
  <div>This page is only accessible to authenticated users.</div>
</Authenticated>
```

### 認証状態の確認
認証状態を確認するには、`useIsAuthenticated`フックを使用します：
```tsx
const { data: isAuthenticated } = useIsAuthenticated();
```

`isAuthenticated`は以下のような形式のオブジェクトを返します：
```ts
{
    authenticated: boolean;    // 認証状態
    redirectTo: string;       // 未認証時のリダイレクト先
    logout: boolean;          // ログアウト状態
}
```

### リアルタイム通信を実装する場合は？
リアルタイムの更新を実装する場合は、Refineの`useSubscription`フックを使用してください：
```tsx
import { useSubscription } from "@refinedev/core";

useSubscription({
    channel: "resources/[resource-name]",
    types: ["created", "updated", "deleted"],
    onLiveEvent: (event) => {
        // イベントに応じたデータ更新処理
    },
});
```

### shadcnのコンポーネントのインストールする方法
```bash
cd next-app && npx shadcn@latest add ${component-name}
```
