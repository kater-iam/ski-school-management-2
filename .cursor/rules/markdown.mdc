---
description: マークダウンで書かれるファイル
globs: *.md
---
## 共通仕様
- マークダウンで記載するときはヘディングやリストを使い、構造化を明確に利用する。
- 仕様書については業務フロー図、をはじめとしたUMLなどの可能な限り図を入れることとし、Mermaid.jsの記法で記述する。
- など、とか、といった冗長な表現は避け、
- 仕様書に関連するファイルはかきの

## ファイル構成

### README.md
開発者に向けた開発のための情報を記載する。
ローカル環境の構築方法と各種ドキュメントのリストを記載する。

### 01-要件概要.md
要件の概要が記述される。システムが対象とする企業、組織の概要、問題点を完結に列挙する。

### 02-要件定義.md
要件概要の内容に矛盾せず要件定義がなされている。要件定義では機能要件が列挙される。
非機能要件については曖昧な表記を許すが、詳細な数値目標まで踏み込まない。
ユースケース図についても記載される。

### 03-詳細設計.md
要件定義の内容に矛盾せず詳細設計が記載されている。機能の具体的な設計に始まり、構成図、権限設計、各種業務フロー、状態遷移などの図がMermaid記法で書かれている。
たとえば項目の定義など、必要なものの仕様を定める。
非機能要件については言及しない。
使用技術は下記のもので固定とする。
- フロント: React
- Backend: TypeScript
- インフラ: Supabase
- DB: Postgres
- 認証: Supabase

### 04-サイトマップ.md
システムで利用されるURLのパスについてのリストをサイトマップとして作成する。
サイトマップはツリー構造の図ではなく、テーブル構造のリストとして作成する。
テーブルは `パス`, `名称`, `基本機能`, `特記事項` の項目で構成される。
`基本機能` には基本的な機能、具体的には「予約の作成」といった機能を記載する。パスから推測される程度の内容で良い。 `特記事項` ではパスからは推測されづらい機能を記載する。この内容は詳細設計などを元に、そのページに対して配置すべき機能を記載する。

### 05-DB設計.md
データベース設計を記載する。PostgreSQLで設計される。他の仕様書をもとにER図とテーブルの設計を記載する。
