import { DevtoolsProvider } from "@providers/devtools";
import { GitHubBanner, Refine } from "@refinedev/core";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import {
  RefineSnackbarProvider,
  useNotificationProvider,
} from "@refinedev/mui";
import routerProvider from "@refinedev/nextjs-router";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";

import { ColorModeContextProvider } from "@contexts/color-mode";
import { authProviderClient } from "@providers/auth-provider/auth-provider.client";
import { dataProvider } from "@providers/data-provider";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    (<html lang="en">
      <body>
        <Suspense>
          <GitHubBanner />
          <RefineKbarProvider>
            <ColorModeContextProvider defaultMode={defaultMode}>
              <RefineSnackbarProvider>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    authProvider={authProviderClient}
                    dataProvider={dataProvider}
                    notificationProvider={useNotificationProvider}
                    resources={[{
                      name: "blog_posts",
                      list: "/blog-posts",
                      create: "/blog-posts/create",
                      edit: "/blog-posts/edit/:id",
                      show: "/blog-posts/show/:id",
                      meta: {
                        canDelete: true,
                      },
                    }, {
                      name: "categories",
                      list: "/categories",
                      create: "/categories/create",
                      edit: "/categories/edit/:id",
                      show: "/categories/show/:id",
                      meta: {
                        canDelete: true,
                      },
                    }, {
                      name: "lessons",
                      list: "/lessons",
                      create: "/lessons/create",
                      edit: "/lessons/edit/:id",
                      show: "/lessons/show/:id"
                    }, {
                      name: "instructor_schedules",
                      list: "/instructor_schedules",
                      create: "/instructor_schedules/create",
                      edit: "/instructor_schedules/edit/:id",
                      show: "/instructor_schedules/show/:id"
                    }, {
                      name: "lesson_schedules",
                      list: "/lesson_schedules",
                      create: "/lesson_schedules/create",
                      edit: "/lesson_schedules/edit/:id",
                      show: "/lesson_schedules/show/:id"
                    }, {
                      name: "reservations",
                      list: "/reservations",
                      create: "/reservations/create",
                      edit: "/reservations/edit/:id",
                      show: "/reservations/show/:id"
                    }, {
                      name: "profiles",
                      list: "/profiles",
                      create: "/profiles/create",
                      edit: "/profiles/edit/:id",
                      show: "/profiles/show/:id"
                    }, {
                      name: "user_levels",
                      list: "/user_levels",
                      create: "/user_levels/create",
                      edit: "/user_levels/edit/:id",
                      show: "/user_levels/show/:id"
                    }, {
                      name: "lesson_levels",
                      list: "/lesson_levels",
                      create: "/lesson_levels/create",
                      edit: "/lesson_levels/edit/:id",
                      show: "/lesson_levels/show/:id"
                    }]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: "eLITxG-Ja0EJq-Hj2XGJ",
                    }}
                  >
                    {children}
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </RefineSnackbarProvider>
            </ColorModeContextProvider>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>)
  );
}
